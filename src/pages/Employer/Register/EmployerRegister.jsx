import React, { useState } from 'react';
import { Link } from 'react-router-dom';
import './EmployerRegister.css';

const EmployerRegister = () => {
    const [currentStep, setCurrentStep] = useState(1);
    const [formData, setFormData] = useState({
        // Step 1
        companyType: '',
        email: '',
        password: '',
        confirmPassword: '',
        agreeToTerms: false,
        // Step 2
        fullName: '',
        gender: '',
        phone: '',
        companyName: '',
        workLocation: '',
        district: '',
        agreeToTermsStep2: false
    });

    const [showPassword, setShowPassword] = useState(false);
    const [showConfirmPassword, setShowConfirmPassword] = useState(false);
    const [errors, setErrors] = useState({});

    const handleInputChange = (e) => {
        const { name, value, type, checked } = e.target;
        setFormData(prev => ({
            ...prev,
            [name]: type === 'checkbox' ? checked : value
        }));
    };

    const validateStep1 = () => {
        const newErrors = {};

        if (!formData.companyType) newErrors.companyType = 'Vui l√≤ng ch·ªçn quy ƒë·ªãnh';
        if (!formData.email) newErrors.email = 'Vui l√≤ng nh·∫≠p email';
        if (!formData.password) newErrors.password = 'Vui l√≤ng nh·∫≠p m·∫≠t kh·∫©u';
        if (formData.password.length < 6) newErrors.password = 'M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 6 k√Ω t·ª±';
        if (!formData.confirmPassword) newErrors.confirmPassword = 'Vui l√≤ng nh·∫≠p l·∫°i m·∫≠t kh·∫©u';
        if (formData.password !== formData.confirmPassword) {
            newErrors.confirmPassword = 'M·∫≠t kh·∫©u kh√¥ng kh·ªõp';
        }
        if (!formData.agreeToTerms) newErrors.agreeToTerms = 'Vui l√≤ng ƒë·ªìng √Ω v·ªõi ƒëi·ªÅu kho·∫£n';

        setErrors(newErrors);
        return Object.keys(newErrors).length === 0;
    };

    const validateStep2 = () => {
        const newErrors = {};

        if (!formData.fullName) newErrors.fullName = 'Vui l√≤ng nh·∫≠p h·ªç v√† t√™n';
        if (!formData.gender) newErrors.gender = 'Vui l√≤ng ch·ªçn gi·ªõi t√≠nh';
        if (!formData.phone) newErrors.phone = 'Vui l√≤ng nh·∫≠p s·ªë ƒëi·ªán tho·∫°i';
        if (!formData.companyName) newErrors.companyName = 'Vui l√≤ng nh·∫≠p t√™n c√¥ng ty';
        if (!formData.workLocation) newErrors.workLocation = 'Vui l√≤ng ch·ªçn ƒë·ªãa ƒëi·ªÉm l√†m vi·ªác';
        if (!formData.agreeToTermsStep2) newErrors.agreeToTermsStep2 = 'Vui l√≤ng ƒë·ªìng √Ω v·ªõi ƒëi·ªÅu kho·∫£n';

        setErrors(newErrors);
        return Object.keys(newErrors).length === 0;
    };

    const handleNext = () => {
        if (validateStep1()) {
            setCurrentStep(2);
        }
    };

    const handleSubmit = (e) => {
        e.preventDefault();
        if (validateStep2()) {
            console.log('Registration data:', formData);
            alert('ƒêƒÉng k√Ω th√†nh c√¥ng!');
        }
    };

    const handleGoogleRegister = () => {
        console.log('Google registration for employer');
    };

    return (
        <div className="employer-register-page">
            <div className="employer-register-container">
                {/* Left Side - Register Form */}
                <div className="employer-register-form">


                    <div className="form-content">
                        <div className="form-header">
                            <div className="logo">
                                <img src="/logo-WorkHub.png" alt="WorkHub" className="logo-img" />
                                <span className="logo-text">WorkHub</span>
                            </div>
                        </div>
                        <h1>ƒêƒÉng k√Ω t√†i kho·∫£n Nh√† tuy·ªÉn d·ª•ng</h1>
                        <p>C√πng t·∫°o d·ª±ng l·ª£i th·∫ø cho doanh nghi·ªáp b·∫±ng tr·∫£i nghi·ªám c√¥ng ngh·ªá tuy·ªÉn d·ª•ng ·ª©ng d·ª•ng s√¢u AI & Hiring Funnel.</p>

                        {currentStep === 1 && (
                            <form onSubmit={(e) => { e.preventDefault(); handleNext(); }}>
                                {/* Company Type */}
                                <div className="form-group">
                                    <label>Quy ƒë·ªãnh <span className="required">*</span></label>
                                    <div className="select-wrapper">
                                        <select
                                            name="companyType"
                                            value={formData.companyType}
                                            onChange={handleInputChange}
                                            className={errors.companyType ? 'error' : ''}
                                        >
                                            <option value="">Quy ƒë·ªãnh</option>
                                            <option value="company">C√¥ng ty TNHH</option>
                                            <option value="joint-stock">C√¥ng ty C·ªï ph·∫ßn</option>
                                            <option value="enterprise">Doanh nghi·ªáp t∆∞ nh√¢n</option>
                                            <option value="startup">Startup</option>
                                            <option value="agency">C∆° quan nh√† n∆∞·ªõc</option>
                                            <option value="ngo">T·ªï ch·ª©c phi ch√≠nh ph·ªß</option>
                                            <option value="other">Kh√°c</option>
                                        </select>
                                        <span className="select-arrow">‚ñº</span>
                                    </div>
                                    {errors.companyType && <span className="error-text">{errors.companyType}</span>}
                                </div>

                                <h3 className="section-title">T√†i kho·∫£n</h3>

                                {/* Terms Agreement */}
                                <div className="form-group checkbox-group">
                                    <label className="checkbox-label">
                                        <input
                                            type="checkbox"
                                            name="agreeToTerms"
                                            checked={formData.agreeToTerms}
                                            onChange={handleInputChange}
                                        />
                                        <span className="checkmark"></span>
                                        T√¥i ƒë√£ ƒë·ªçc v√† ƒë·ªìng √Ω v·ªõi <Link to="/terms">ƒêi·ªÅu kho·∫£n d·ªãch v·ª•</Link> v√† <Link to="/privacy">Ch√≠nh s√°ch b·∫£o m·∫≠t</Link> c·ªßa TopCV.
                                    </label>
                                    {errors.agreeToTerms && <span className="error-text">{errors.agreeToTerms}</span>}
                                </div>

                                {/* Google Register Button */}
                                <button
                                    type="button"
                                    className="google-register-btn"
                                    onClick={handleGoogleRegister}
                                >
                                    <span className="google-icon">G</span>
                                    ƒêƒÉng k√Ω b·∫±ng Google
                                </button>

                                <div className="divider">
                                    <span>Ho·∫∑c b·∫±ng email</span>
                                </div>

                                {/* Email */}
                                <div className="form-group">
                                    <label>Email ƒëƒÉng nh·∫≠p <span className="required">*</span></label>
                                    <div className="input-wrapper">
                                        <span className="input-icon">‚úâÔ∏è</span>
                                        <input
                                            type="email"
                                            name="email"
                                            placeholder="Email"
                                            value={formData.email}
                                            onChange={handleInputChange}
                                            className={errors.email ? 'error' : ''}
                                        />
                                    </div>
                                    {errors.email && <span className="error-text">{errors.email}</span>}
                                    <div className="input-note">
                                        Tr∆∞·ªùng h·ª£p b·∫°n ƒëƒÉng k√Ω t√†i kho·∫£n b·∫±ng email kh√¥ng ph·∫£i email t√™n mi·ªÅn c√¥ng ty, m·ªôt s·ªë d·ªãch v·ª• tr√™n t√†i kho·∫£n c√≥ th·ªÉ s·∫Ω b·ªã gi·ªõi h·∫°n quy·ªÅn mua ho·∫∑c s·ª≠ d·ª•ng.
                                    </div>
                                </div>

                                {/* Password */}
                                <div className="form-group">
                                    <label>M·∫≠t kh·∫©u <span className="required">*</span></label>
                                    <div className="input-wrapper">
                                        <span className="input-icon">üîí</span>
                                        <input
                                            type={showPassword ? 'text' : 'password'}
                                            name="password"
                                            placeholder="M·∫≠t kh·∫©u (t·ª´ 6 ƒë·∫øn 25 k√Ω t·ª±)"
                                            value={formData.password}
                                            onChange={handleInputChange}
                                            className={errors.password ? 'error' : ''}
                                        />
                                        <button
                                            type="button"
                                            className="password-toggle"
                                            onClick={() => setShowPassword(!showPassword)}
                                        >
                                            {showPassword ? 'üëÅÔ∏è' : 'üëÅÔ∏è‚Äçüó®Ô∏è'}
                                        </button>
                                    </div>
                                    {errors.password && <span className="error-text">{errors.password}</span>}
                                </div>

                                {/* Confirm Password */}
                                <div className="form-group">
                                    <label>Nh·∫≠p l·∫°i m·∫≠t kh·∫©u <span className="required">*</span></label>
                                    <div className="input-wrapper">
                                        <span className="input-icon">üîí</span>
                                        <input
                                            type={showConfirmPassword ? 'text' : 'password'}
                                            name="confirmPassword"
                                            placeholder="Nh·∫≠p l·∫°i m·∫≠t kh·∫©u"
                                            value={formData.confirmPassword}
                                            onChange={handleInputChange}
                                            className={errors.confirmPassword ? 'error' : ''}
                                        />
                                        <button
                                            type="button"
                                            className="password-toggle"
                                            onClick={() => setShowConfirmPassword(!showConfirmPassword)}
                                        >
                                            {showConfirmPassword ? 'üëÅÔ∏è' : 'üëÅÔ∏è‚Äçüó®Ô∏è'}
                                        </button>
                                    </div>
                                    {errors.confirmPassword && <span className="error-text">{errors.confirmPassword}</span>}
                                </div>

                                <button type="submit" className="next-btn">
                                    Ti·∫øp t·ª•c
                                </button>
                            </form>
                        )}

                        {currentStep === 2 && (
                            <form onSubmit={handleSubmit}>
                                <h2>Th√¥ng tin nh√† tuy·ªÉn d·ª•ng</h2>

                                {/* Full Name & Gender */}
                                <div className="form-row">
                                    <div className="form-group">
                                        <label>H·ªç v√† t√™n <span className="required">*</span></label>
                                        <div className="input-wrapper">
                                            <span className="input-icon">üë§</span>
                                            <input
                                                type="text"
                                                name="fullName"
                                                placeholder="H·ªç v√† t√™n"
                                                value={formData.fullName}
                                                onChange={handleInputChange}
                                                className={errors.fullName ? 'error' : ''}
                                            />
                                        </div>
                                        {errors.fullName && <span className="error-text">{errors.fullName}</span>}
                                    </div>

                                    <div className="form-group gender-group">
                                        <label>Gi·ªõi t√≠nh: <span className="required">*</span></label>
                                        <div className="radio-group">
                                            <label className="radio-label">
                                                <input
                                                    type="radio"
                                                    name="gender"
                                                    value="male"
                                                    checked={formData.gender === 'male'}
                                                    onChange={handleInputChange}
                                                />
                                                <span className="radio-mark"></span>
                                                Nam
                                            </label>
                                            <label className="radio-label">
                                                <input
                                                    type="radio"
                                                    name="gender"
                                                    value="female"
                                                    checked={formData.gender === 'female'}
                                                    onChange={handleInputChange}
                                                />
                                                <span className="radio-mark"></span>
                                                N·ªØ
                                            </label>
                                        </div>
                                        {errors.gender && <span className="error-text">{errors.gender}</span>}
                                    </div>
                                </div>

                                {/* Phone */}
                                <div className="form-group">
                                    <label>S·ªë ƒëi·ªán tho·∫°i c√° nh√¢n <span className="required">*</span></label>
                                    <div className="input-wrapper">
                                        <span className="input-icon">üì±</span>
                                        <input
                                            type="tel"
                                            name="phone"
                                            placeholder="S·ªë ƒëi·ªán tho·∫°i c√° nh√¢n"
                                            value={formData.phone}
                                            onChange={handleInputChange}
                                            className={errors.phone ? 'error' : ''}
                                        />
                                    </div>
                                    {errors.phone && <span className="error-text">{errors.phone}</span>}
                                </div>

                                {/* Company Name */}
                                <div className="form-group">
                                    <label>C√¥ng ty <span className="required">*</span></label>
                                    <div className="input-wrapper">
                                        <span className="input-icon">üè¢</span>
                                        <input
                                            type="text"
                                            name="companyName"
                                            placeholder="T√™n c√¥ng ty"
                                            value={formData.companyName}
                                            onChange={handleInputChange}
                                            className={errors.companyName ? 'error' : ''}
                                        />
                                    </div>
                                    {errors.companyName && <span className="error-text">{errors.companyName}</span>}
                                </div>

                                {/* Work Location */}
                                <div className="form-row">
                                    <div className="form-group">
                                        <label>ƒê·ªãa ƒëi·ªÉm l√†m vi·ªác <span className="required">*</span></label>
                                        <div className="select-wrapper">
                                            <span className="input-icon">üè¢</span>
                                            <select
                                                name="workLocation"
                                                value={formData.workLocation}
                                                onChange={handleInputChange}
                                                className={errors.workLocation ? 'error' : ''}
                                            >
                                                <option value="">Ch·ªçn t·ªânh/th√†nh ph·ªë</option>
                                                <option value="hanoi">H√† N·ªôi</option>
                                                <option value="hcm">H·ªì Ch√≠ Minh</option>
                                                <option value="danang">ƒê√† N·∫µng</option>
                                                <option value="haiphong">H·∫£i Ph√≤ng</option>
                                                <option value="cantho">C·∫ßn Th∆°</option>
                                                <option value="binhduong">B√¨nh D∆∞∆°ng</option>
                                                <option value="dongnaui">ƒê·ªìng Nai</option>
                                                <option value="bacninh">B·∫Øc Ninh</option>
                                                <option value="other">Kh√°c</option>
                                            </select>
                                            <span className="select-arrow">‚ñº</span>
                                        </div>
                                        {errors.workLocation && <span className="error-text">{errors.workLocation}</span>}
                                    </div>

                                    <div className="form-group">
                                        <label>Qu·∫≠n/huy·ªán</label>
                                        <div className="select-wrapper">
                                            <span className="input-icon">üèõÔ∏è</span>
                                            <select
                                                name="district"
                                                value={formData.district}
                                                onChange={handleInputChange}
                                            >
                                                <option value="">Ch·ªçn qu·∫≠n/huy·ªán</option>
                                                <option value="district1">Qu·∫≠n 1</option>
                                                <option value="district2">Qu·∫≠n 2</option>
                                                <option value="district3">Qu·∫≠n 3</option>
                                                <option value="district4">Qu·∫≠n 4</option>
                                                <option value="district5">Qu·∫≠n 5</option>
                                                <option value="district6">Qu·∫≠n 6</option>
                                                <option value="district7">Qu·∫≠n 7</option>
                                                <option value="district8">Qu·∫≠n 8</option>
                                                <option value="district9">Qu·∫≠n 9</option>
                                                <option value="district10">Qu·∫≠n 10</option>
                                                <option value="district11">Qu·∫≠n 11</option>
                                                <option value="district12">Qu·∫≠n 12</option>
                                                <option value="binhtan">Qu·∫≠n B√¨nh T√¢n</option>
                                                <option value="binhthanh">Qu·∫≠n B√¨nh Th·∫°nh</option>
                                                <option value="govap">Qu·∫≠n G√≤ V·∫•p</option>
                                                <option value="phunhuan">Qu·∫≠n Ph√∫ Nhu·∫≠n</option>
                                                <option value="tanbinh">Qu·∫≠n T√¢n B√¨nh</option>
                                                <option value="tanphu">Qu·∫≠n T√¢n Ph√∫</option>
                                                <option value="thuduc">Qu·∫≠n Th·ªß ƒê·ª©c</option>
                                            </select>
                                            <span className="select-arrow">‚ñº</span>
                                        </div>
                                    </div>
                                </div>

                                {/* Terms Agreement */}
                                <div className="form-group checkbox-group">
                                    <label className="checkbox-label">
                                        <input
                                            type="checkbox"
                                            name="agreeToTermsStep2"
                                            checked={formData.agreeToTermsStep2}
                                            onChange={handleInputChange}
                                        />
                                        <span className="checkmark"></span>
                                        T√¥i ƒë√£ ƒë·ªçc v√† ƒë·ªìng √Ω v·ªõi <Link to="/terms">ƒêi·ªÅu kho·∫£n d·ªãch v·ª•</Link> v√† <Link to="/privacy">Ch√≠nh s√°ch b·∫£o m·∫≠t</Link> c·ªßa TopCV.
                                    </label>
                                    {errors.agreeToTermsStep2 && <span className="error-text">{errors.agreeToTermsStep2}</span>}
                                </div>

                                <button type="submit" className="complete-btn">
                                    Ho√†n t·∫•t
                                </button>

                                <div className="form-actions">
                                    <button
                                        type="button"
                                        className="back-btn"
                                        onClick={() => setCurrentStep(1)}
                                    >
                                        Quay l·∫°i
                                    </button>
                                </div>
                            </form>
                        )}

                        <div className="login-link">
                            <p>
                                ƒê√£ c√≥ t√†i kho·∫£n? <Link to="/employer/login">ƒêƒÉng nh·∫≠p ngay</Link>
                            </p>
                        </div>
                    </div>

                    <div className="copyright">
                        <p>¬©2014-2025 WorkHub Vietnam JSC. All rights reserved.</p>
                    </div>
                </div>

                {/* Right Side - Illustration */}
                <div className="employer-register-illustration">
                    <div className="illustration-content">
                        {currentStep === 1 && (
                            <>
                                <div className="ai-cube-container">
                                    <div className="ai-cube">
                                        <div className="cube-face front">
                                            <div className="hexagon-pattern">
                                                <div className="hexagon"></div>
                                                <div className="hexagon"></div>
                                                <div className="hexagon"></div>
                                            </div>
                                            <div className="ai-logo">WorkHub AI</div>
                                        </div>
                                    </div>
                                    <div className="floating-elements">
                                        <div className="element element-1">üí°</div>
                                        <div className="element element-2">üîç</div>
                                        <div className="element element-3">‚ö°</div>
                                    </div>
                                </div>

                                <div className="text-content">
                                    <h2>Match your candidate with <span className="highlight">AI</span></h2>
                                    <div className="pagination-dots">
                                        <span className="dot active"></span>
                                        <span className="dot"></span>
                                        <span className="dot"></span>
                                    </div>
                                </div>
                            </>
                        )}

                        {currentStep === 2 && (
                            <>
                                <div className="campaign-container">
                                    <div className="screens">
                                        <div className="screen screen-1">
                                            <div className="screen-header"></div>
                                            <div className="screen-content">
                                                <div className="chart-line"></div>
                                                <div className="data-points">
                                                    <div className="point"></div>
                                                    <div className="point"></div>
                                                    <div className="point"></div>
                                                </div>
                                            </div>
                                        </div>
                                        <div className="screen screen-2">
                                            <div className="screen-header"></div>
                                            <div className="screen-content">
                                                <div className="progress-bars">
                                                    <div className="progress-bar"></div>
                                                    <div className="progress-bar"></div>
                                                    <div className="progress-bar"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div className="growth-arrow">
                                        <svg viewBox="0 0 100 100">
                                            <path d="M10,90 Q50,10 90,30" stroke="#00ff88" strokeWidth="3" fill="none" />
                                            <polygon points="85,25 95,30 85,35" fill="#00ff88" />
                                        </svg>
                                    </div>
                                </div>

                                <div className="text-content">
                                    <h2>Manage your works with <span className="highlight">Campaigns</span></h2>
                                    <div className="pagination-dots">
                                        <span className="dot"></span>
                                        <span className="dot active"></span>
                                        <span className="dot"></span>
                                    </div>
                                </div>
                            </>
                        )}

                        <div className="bottom-logo">
                            <img src="/logo-WorkHub.png" alt="WorkHub" className="bottom-logo-img" />
                            <span className="bottom-logo-text">WorkHub</span>
                            <p className="slogan">Ti·∫øp l·ª£i th·∫ø, n·ªëi th√†nh c√¥ng</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default EmployerRegister;